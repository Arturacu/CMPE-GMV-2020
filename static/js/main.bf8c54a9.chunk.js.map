{"version":3,"sources":["util/utilities.js","components/info-box/index.js","components/download-pdf-button/index.js","components/message-certification-form/index.js","components/message-output/index.js","algorithm/certify.js","sections/certify/index.js","components/message-validation-form/index.js","algorithm/verify.js","sections/validate/index.js","components/cards/card-image/index.js","components/cards/card-avatar/index.js","components/cards/card-title/index.js","components/cards/card-bio/index.js","components/cards/card/index.js","navrouter/index.js","sections/home/index.js","sections/about/index.js","App.js","index.js"],"names":["start","end","step","InfoBox","className","href","DownloadPDFButton","props","pathToFile","download","messageFirstPart","messageSecondPart","numbersTranscript","y","una","dos","tres","cuatro","cinco","seis","siete","ocho","nueve","diez","once","doce","trece","catorce","quince","dieciseis","diecisiete","dieciocho","diecinueve","veinte","veintiuna","veintidos","veintitres","veinticuatro","veinticinco","veintiseis","veintisiete","veintiocho","veintinueve","treinta","cuarenta","cincuenta","sesenta","setenta","ochenta","noventa","cien","ciento","doscientas","trescientas","cuatrocientas","quinientas","seiscientas","setecientas","ochocientas","novecientas","mil","alphabetChars","charCodeAt","Array","from","length","_","i","map","x","String","fromCharCode","standardizeString","str","toLowerCase","replace","normalize","countFrequencyLetters","reduce","a","c","charCounter","removeWhitespaces","removePunctuation","numberToWord","number","outlierNums","0","10","11","12","13","14","15","20","100","1000","units","tens","Math","floor","hundreds","charFrequencyInNumber","character","char","t","MessageCertificationForm","onSubmit","name","value","message","onChange","placeholder","certifyingChar","utilities","type","MessageOutput","clipboard","text","outputMessage","visible","loading","postscriptConstantFrequencies","certifyMessageSingleChar","messageFrequencies","messageCharFreq","bound","minValidFreq","certifyMessageAllChars","toUpperCase","Certify","state","outputVisible","outputLoading","handleSubmit","bind","handleInputChange","generatePostscript","output","certifyMessage","this","setState","event","preventDefault","target","React","Component","MessageValidationForm","regexPostscript","postscriptGlobalExp","RegExp","postscriptExp","isValidMessageWithPostscript","messageWithPostscript","postscriptFrequencies","split","pop","match","accumulator","sentence","groups","freq","letter","sentenceWords","result","currentWords","wordToNumber","Validate","isValid","console","log","CardImg","src","imgSrc","CardAvatar","avatarSrc","CardTitle","id","targetId","title","subTitle","CardBio","bio","Card","direction","routes","path","process","NavRouter","route","exact","to","activeClassName","component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bf8c54a9.chunk.js","sourcesContent":["/* Constant message for no postscript available  */\r\nexport const noPostscriptAvailable = 'No existe firma válida posible para este mensaje.';\r\n/* Length of the alphabet used, Latin alphabet */\r\nexport const alphabetLength = 26;\r\n/* First part of the message postscript */\r\nexport const messageFirstPart = 'en este mensaje aparece ';\r\n/* Second part of the message postscript when frequency > 1 */\r\nexport const messageSecondPart = ' veces la letra ';\r\n/* Second part of the message postscript when frequency == 1 */\r\nexport const messageSecondPartSingle = ' vez la letra ';\r\n/* K-Constant for the first million numbers written in Spanish */\r\nexport const kConstantFirstMillion = 20;\r\n\r\n/* Transcript for numbers in Spanish */\r\nconst numbersTranscript = {\r\n    '': 0,\r\n    y: 0,\r\n    una: 1,\r\n    dos: 2,\r\n    tres: 3,\r\n    cuatro: 4,\r\n    cinco: 5,\r\n    seis: 6,\r\n    siete: 7,\r\n    ocho: 8,\r\n    nueve: 9,\r\n    diez: 10,\r\n    once: 11,\r\n    doce: 12,\r\n    trece: 13,\r\n    catorce: 14,\r\n    quince: 15,\r\n    dieciseis: 16,\r\n    diecisiete: 17,\r\n    dieciocho: 18,\r\n    diecinueve: 19,\r\n    veinte: 20,\r\n    veintiuna: 21,\r\n    veintidos: 22,\r\n    veintitres: 23,\r\n    veinticuatro: 24,\r\n    veinticinco: 25,\r\n    veintiseis: 26,\r\n    veintisiete: 27,\r\n    veintiocho: 28,\r\n    veintinueve: 29,\r\n    treinta: 30,\r\n    cuarenta: 40,\r\n    cincuenta: 50,\r\n    sesenta: 60,\r\n    setenta: 70,\r\n    ochenta: 80,\r\n    noventa: 90,\r\n    cien: 100,\r\n    ciento: 100,\r\n    doscientas: 200,\r\n    trescientas: 300,\r\n    cuatrocientas: 400,\r\n    quinientas: 500,\r\n    seiscientas: 600,\r\n    setecientas: 700,\r\n    ochocientas: 800,\r\n    novecientas: 900,\r\n    mil: 1000\r\n};\r\n\r\n/* Function to generate the range of values given the start, end and the step size */\r\nexport const range = (start, end, step) =>\r\n    Array.from({ length: (end - start) / step + 1 }, (_, i) => start + i * step);\r\n\r\n/* List of Chars for the alphabet  */\r\nexport const alphabetChars = range('a'.charCodeAt(0), 'z'.charCodeAt(0), 1).map((x) =>\r\n    String.fromCharCode(x)\r\n);\r\n\r\n/* Count frequency of characters in a string */\r\nexport const charCounter = (str) => [...str].reduce((a, c) => (a[c] = a[c] + 1 || 1) && a, {});\r\n\r\n/* Remove punctuation characters from a given string */\r\nexport const removePunctuation = (str) =>\r\n    str.replace(/[.,/#!$%^&*;:{}=\\-_`~()]/g, '').replace(/\\s{2,}/g, ' ');\r\n\r\n/* Remove whitespaces from a given string */\r\nexport const removeWhitespaces = (str) => str.replace(/\\s/g, '');\r\n\r\n/* Standardize a message to match the expected format: lowering the string, removing ñ character and accents/diacritics */\r\nexport const standardizeString = (str) =>\r\n    str\r\n        .toLowerCase()\r\n        .replace('ñ', '')\r\n        .replace(/\\?/g, '')\r\n        .normalize('NFD')\r\n        .replace(/[\\u0300-\\u036f]/g, '');\r\n\r\n/* Counts the number of letters from the latin alphabet in a message and returns a dictionary with the values */\r\nexport const countFrequencyLetters = (str) =>\r\n    charCounter(standardizeString(removeWhitespaces(removePunctuation(str))));\r\n\r\n/* Given a character and a string, counts the number of characters in the string */\r\nexport const countFrequencySingleLetter = (str, char) =>\r\n    [...str].reduce((t, c) => t + (char === c ? 1 : 0), 0);\r\n\r\n/* Transforms a number to words in Spanish\r\n *   TODO: Throw exception for numbers greater or equal than 1000000 */\r\nexport const numberToWord = (number) => {\r\n    const outlierNums = {\r\n        0: 'cero',\r\n        10: 'diez',\r\n        11: 'once',\r\n        12: 'doce',\r\n        13: 'trece',\r\n        14: 'catorce',\r\n        15: 'quince',\r\n        20: 'veinte',\r\n        100: 'cien',\r\n        1000: 'mil'\r\n    };\r\n    if (number in outlierNums) {\r\n        return outlierNums[number];\r\n    }\r\n    if (number < 100) {\r\n        const units = [\r\n            '',\r\n            'una',\r\n            'dos',\r\n            'tres',\r\n            'cuatro',\r\n            'cinco',\r\n            'seis',\r\n            'siete',\r\n            'ocho',\r\n            'nueve'\r\n        ];\r\n        const tens = [\r\n            '',\r\n            'dieci',\r\n            'veinti',\r\n            'treinta',\r\n            'cuarenta',\r\n            'cincuenta',\r\n            'sesenta',\r\n            'setenta',\r\n            'ochenta',\r\n            'noventa'\r\n        ];\r\n        if (number % 10 === 0) {\r\n            return tens[Math.floor(number / 10)];\r\n        }\r\n        if (number < 30) {\r\n            return tens[Math.floor(number / 10)] + units[Math.floor(number % 10)];\r\n        }\r\n        return tens[Math.floor(number / 10)] + ' y ' + units[number % 10];\r\n    }\r\n    if (number < 1000) {\r\n        const hundreds = [\r\n            '',\r\n            'ciento',\r\n            'doscientas',\r\n            'trescientas',\r\n            'cuatrocientas',\r\n            'quinientas',\r\n            'seiscientas',\r\n            'setecientas',\r\n            'ochocientas',\r\n            'novecientas'\r\n        ];\r\n        if (number % 100 === 0) {\r\n            return hundreds[Math.floor(number / 100)];\r\n        }\r\n        return hundreds[Math.floor(number / 100)] + ' ' + numberToWord(number % 100);\r\n    }\r\n    if (number < 1000000) {\r\n        if (number < 2000) {\r\n            return 'mil ' + numberToWord(number % 1000);\r\n        }\r\n        if (number % 1000 === 0) {\r\n            return numberToWord(Math.floor(number / 1000)) + ' mil';\r\n        }\r\n        return numberToWord(Math.floor(number / 1000)) + ' mil ' + numberToWord(number % 1000);\r\n    }\r\n};\r\n\r\n/* Transforms a set of words into a number */\r\nexport const wordToNumber = (sentence) => {\r\n    const sentenceWords = sentence.split(' ');\r\n\r\n    let result = 0;\r\n    let hundreds = false;\r\n    const forLength = sentenceWords.length - 1;\r\n\r\n    for (let i = forLength; i >= 0; i--) {\r\n        let currentWords = sentenceWords[i];\r\n        if (result >= 0 && currentWords in numbersTranscript) {\r\n            if (currentWords === 'mil' && i !== 0) {\r\n                hundreds = true;\r\n            } else if (hundreds) {\r\n                result += numbersTranscript[currentWords] * 1000;\r\n            } else {\r\n                result += numbersTranscript[currentWords];\r\n            }\r\n        } else {\r\n            result = -1;\r\n        }\r\n    }\r\n    return result;\r\n};\r\n\r\n/* Counts the frequency of a given character in the word which express a given number */\r\nexport const charFrequencyInNumber = (character, number) =>\r\n    countFrequencySingleLetter(numberToWord(number), character);\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport const InfoBox = () => {\r\n    return (\r\n        <div className=\"infoBox\">\r\n            <h4>Comunicado del equipo e-motion:</h4>\r\n            <p>\r\n                En esta página encontrarás nuestra propuesta de solución al problema planteado por\r\n                la empresa <a href=\"https://www.gmv.com/es/\">GMV</a> en la{' '}\r\n                <a href=\"https://matematicas.ucm.es/modelizacion-de-problemas-de-empresas\">\r\n                    2º Edición del Concurso de Modelización de Problemas de Empresa\r\n                </a>{' '}\r\n                organizado por la Facultad de Matemáticas de la{' '}\r\n                <a href=\"https://www.ucm.es/\">Universidad Complutense de Madrid</a> por parte de\r\n                nuestro equipo.{' '}\r\n            </p>\r\n            <p>\r\n                Utilizando la barra de navegación podrás certificar/firmar un mensaje, verificar que\r\n                la firma para un mensaje es correcta o conocer más detalles sobre nuestro equipo.\r\n            </p>\r\n            <p>\r\n                También te animamos a descargar el PDF con el documento teórico desarrollando\r\n                nuestra propuesta a solución. Para ello, haz click sobre el icono de PDF que aparece\r\n                debajo de este mensaje.\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport const DownloadPDFButton = (props) => {\r\n    return (\r\n        <div className=\"downloadPDFButton\">\r\n            <a href={props.pathToFile} download>\r\n                <span>Descargar</span>\r\n                <span>PDF</span>\r\n            </a>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport * as utilities from '../../util/utilities';\r\nimport './style.css';\r\n\r\nexport const MessageCertificationForm = (props) => {\r\n    return (\r\n        <form className=\"certification-form\" onSubmit={props.onSubmit}>\r\n            <textarea\r\n                name=\"message\"\r\n                value={props.message}\r\n                onChange={props.onChange}\r\n                placeholder=\"Escribe aquí el mensaje para el que quieres generar la posdata...\"\r\n            />\r\n            <select name=\"certifyingChar\" value={props.certifyingChar} onChange={props.onChange}>\r\n                {utilities.alphabetChars.map((character) => (\r\n                    <option key={character} value={character}>\r\n                        Firma con letra {character}\r\n                    </option>\r\n                ))}\r\n            </select>\r\n            <input type=\"submit\" value=\"Generar posdata\" />\r\n        </form>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\r\n\r\nexport const MessageOutput = (props) => {\r\n    return (\r\n        <div className=\"message-output\">\r\n            {props.clipboard ? (\r\n                <CopyToClipboard text={props.message + '\\n' + props.outputMessage}>\r\n                    <button>Copiar el mensaje y la posdata al portapapeles</button>\r\n                </CopyToClipboard>\r\n            ) : null}\r\n            <p>\r\n                {props.visible === true\r\n                    ? props.loading === true\r\n                        ? 'Calculando la posdata...'\r\n                        : props.outputMessage\r\n                    : ''}\r\n            </p>\r\n        </div>\r\n    );\r\n};\r\n","import {\r\n    alphabetChars,\r\n    charFrequencyInNumber,\r\n    countFrequencyLetters,\r\n    numberToWord,\r\n    messageFirstPart,\r\n    messageSecondPart,\r\n    kConstantFirstMillion,\r\n    messageSecondPartSingle,\r\n    noPostscriptAvailable\r\n} from '../util/utilities';\r\n\r\nconst postscriptConstantFrequencies = countFrequencyLetters(messageFirstPart + messageSecondPart);\r\n\r\nexport const certifyMessage = (message, certifyingChar) => {\r\n    const messageFrequencies = countFrequencyLetters(message);\r\n    return certifyingChar === 'all'\r\n        ? certifyMessageAllChars(messageFrequencies)\r\n        : certifyMessageSingleChar(messageFrequencies, certifyingChar);\r\n};\r\n\r\nconst certifyMessageSingleChar = (messageFrequencies, certifyingChar) => {\r\n    const messageCharFrequency =\r\n        certifyingChar in messageFrequencies ? messageFrequencies[certifyingChar] : 0;\r\n    const postscriptConstantFrequency =\r\n        certifyingChar in postscriptConstantFrequencies\r\n            ? postscriptConstantFrequencies[certifyingChar]\r\n            : 0;\r\n    const messageCharFreq = messageCharFrequency + postscriptConstantFrequency + 1; // Note that it always contains at least the letter at the end of the message\r\n\r\n    const bound = kConstantFirstMillion + messageCharFreq;\r\n\r\n    let minValidFreq = messageCharFreq;\r\n    for (\r\n        ;\r\n        minValidFreq < bound &&\r\n        charFrequencyInNumber(certifyingChar, minValidFreq) + messageCharFreq !== minValidFreq;\r\n        minValidFreq++\r\n    );\r\n\r\n    if (minValidFreq < bound) {\r\n        return (\r\n            messageFirstPart +\r\n            numberToWord(minValidFreq) +\r\n            (minValidFreq > 1 ? messageSecondPart : messageSecondPartSingle) +\r\n            certifyingChar\r\n        );\r\n    } else {\r\n        return noPostscriptAvailable;\r\n    }\r\n};\r\n\r\n// TODO: Implement official certification (all chars)\r\n// eslint-disable-next-line\r\nconst certifyMessageAllChars = (messageFrequencies) => {\r\n    return (\r\n        messageFirstPart +\r\n        alphabetChars.map((char) => ' ' + char.toUpperCase() + messageSecondPart + char)\r\n    );\r\n};\r\n","import React from 'react';\r\nimport { MessageCertificationForm } from '../../components/message-certification-form';\r\nimport { MessageOutput } from '../../components/message-output';\r\nimport { certifyMessage } from '../../algorithm/certify';\r\nimport './style.css';\r\n\r\nexport class Certify extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            certifyingChar: 'a',\r\n            outputVisible: false,\r\n            outputLoading: false,\r\n            outputMessage: '',\r\n            clipboard: false\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n        this.generatePostscript = this.generatePostscript.bind(this);\r\n    }\r\n\r\n    generatePostscript(message, certifyingChar) {\r\n        const output = certifyMessage(message, certifyingChar);\r\n        this.setState({ outputMessage: output });\r\n        this.setState({ outputVisible: true });\r\n        this.setState({ clipboard: true });\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const message = this.state.message;\r\n        const certifyingChar = this.state.certifyingChar;\r\n\r\n        this.generatePostscript(message, certifyingChar);\r\n\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"certification-section\">\r\n                <MessageCertificationForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onChange={this.handleInputChange}\r\n                    message={this.state.message}\r\n                    certifyingChar={this.state.certifyingChar}\r\n                />\r\n                <MessageOutput\r\n                    visible={this.state.outputVisible}\r\n                    loading={this.state.outputLoading}\r\n                    message={this.state.message}\r\n                    outputMessage={this.state.outputMessage}\r\n                    clipboard={this.state.clipboard}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport const MessageValidationForm = (props) => {\r\n    return (\r\n        <form className=\"validation-form\" onSubmit={props.onSubmit}>\r\n            <textarea\r\n                name=\"message\"\r\n                value={props.message}\r\n                onChange={props.onChange}\r\n                placeholder=\"Escribe el mensaje con su firma para verificar que está correctamente firmado...\"\r\n            />\r\n            <input type=\"submit\" value=\"Verificar\" />\r\n        </form>\r\n    );\r\n};\r\n","import {\r\n    countFrequencyLetters,\r\n    messageFirstPart,\r\n    standardizeString,\r\n    wordToNumber\r\n} from '../util/utilities';\r\n\r\nconst regexPostscript = '([\\\\w|\\\\s]+)\\\\sve(z|ces)\\\\sla\\\\sletra\\\\s([a-z])';\r\n\r\nconst postscriptGlobalExp = new RegExp(regexPostscript, 'g');\r\n\r\nconst postscriptExp = new RegExp(regexPostscript);\r\n\r\nexport const isValidMessageWithPostscript = (messageWithPostscript) => {\r\n    const postscript = standardizeString(messageWithPostscript).split(messageFirstPart).pop();\r\n    const postscriptFrequencies = postscript.match(postscriptGlobalExp) || [];\r\n    if (postscriptFrequencies.length < 1) {\r\n        return false;\r\n    }\r\n    const messageFrequencies = countFrequencyLetters(messageWithPostscript);\r\n\r\n    const reducer = (accumulator, sentence) => {\r\n        if (accumulator) {\r\n            let groups = sentence.match(postscriptExp);\r\n            let freq = groups[1]; // index of the number written in Spanish\r\n            let letter = groups[3]; // index of the letter\r\n            return messageFrequencies[letter] === wordToNumber(freq);\r\n        }\r\n        return accumulator;\r\n    };\r\n\r\n    return postscriptFrequencies.reduce(reducer, true);\r\n};\r\n","import React from 'react';\r\nimport { MessageOutput } from '../../components/message-output';\r\nimport { MessageValidationForm } from '../../components/message-validation-form';\r\nimport { isValidMessageWithPostscript } from '../../algorithm/verify';\r\nimport './style.css';\r\n\r\nexport class Validate extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            message: '',\r\n            outputVisible: false,\r\n            outputLoading: false,\r\n            outputMessage: ''\r\n        };\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleInputChange = this.handleInputChange.bind(this);\r\n    }\r\n\r\n    handleSubmit(event) {\r\n        const isValid = isValidMessageWithPostscript(this.state.message);\r\n        console.log('isValid: ', isValid);\r\n        this.setState({\r\n            outputMessage: isValid ? 'La firma es válida' : 'La firma no es válida'\r\n        });\r\n        this.setState({ outputVisible: true });\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleInputChange(event) {\r\n        this.setState({\r\n            ...this.state,\r\n            [event.target.name]: event.target.value\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"validation-section\">\r\n                <MessageValidationForm\r\n                    onSubmit={this.handleSubmit}\r\n                    onChange={this.handleInputChange}\r\n                    message={this.state.message}\r\n                />\r\n                <MessageOutput\r\n                    visible={this.state.outputVisible}\r\n                    loading={this.state.outputLoading}\r\n                    message={this.state.message}\r\n                    outputMessage={this.state.outputMessage}\r\n                    clipboard={false}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class CardImg extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"imgContainer\">\r\n                <img src={this.props.imgSrc} className=\"imgStyles\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class CardAvatar extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"infoContainer\">\r\n                <img src={this.props.avatarSrc} className=\"avatarImgStyles\" />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class CardTitle extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"titleDiv\">\r\n                <h1 id={this.props.targetId} className=\"titleStyle\">\r\n                    {this.props.title}\r\n                </h1>\r\n                <h4 className=\"subTitleStyle\">{this.props.subTitle}</h4>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './style.css';\r\n\r\nexport default class CardBio extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"bioContainer\">\r\n                <p className=\"bio\">{this.props.bio}</p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport CardImg from '../card-image';\r\nimport CardAvatar from '../card-avatar';\r\nimport CardTitle from '../card-title';\r\nimport CardBio from '../card-bio';\r\nimport './style.css';\r\n\r\nexport default class Card extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            title: 'Antonio Acuaviva',\r\n            subTitle: 'antoacua@ucm.es',\r\n            bio: 'Estudiante de Matemáticas y Física en la Universidad Complutense de Madrid.',\r\n            direction: 'forwards'\r\n        };\r\n    }\r\n    // eslint-disable-next-line react/no-deprecated\r\n    componentWillMount() {\r\n        if (this.props.type === 'arturo') {\r\n            this.setState({\r\n                title: 'Arturo Acuaviva',\r\n                subTitle: 'arturacu@ucm.es',\r\n                bio:\r\n                    'Estudiante de Ingeniería Informática y Matemáticas en la Universidad Complutense de Madrid.'\r\n            });\r\n        } else if (this.props.type === 'inma') {\r\n            this.setState({\r\n                title: 'Inmaculada Pérez',\r\n                subTitle: 'inmape01@ucm.es',\r\n                bio:\r\n                    'Estudiante de Ingeniería Informática y Matemáticas en la Universidad Complutense de Madrid.'\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"cardFront cardContainer\">\r\n                <CardImg imgSrc={this.props.imgSrc} />\r\n                <CardAvatar avatarSrc={this.props.avatarSrc} />\r\n                <CardTitle\r\n                    targetId={this.props.targetId}\r\n                    title={this.state.title}\r\n                    subTitle={this.state.subTitle}\r\n                />\r\n                <CardBio bio={this.state.bio} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter, NavLink, Route } from 'react-router-dom';\r\nimport { Home } from '../sections/home';\r\nimport { Certify } from '../sections/certify';\r\nimport { Validate } from '../sections/validate';\r\nimport { About } from '../sections/about';\r\nimport './style.css';\r\n\r\nconst routes = [\r\n    { path: '/CMPE-GMV-2020', name: 'Inicio', Component: Home },\r\n    { path: '/CMPE-GMV-2020/certify', name: 'Certificar', Component: Certify },\r\n    { path: '/CMPE-GMV-2020/validate', name: 'Verificar', Component: Validate },\r\n    { path: '/CMPE-GMV-2020/about', name: 'Sobre nosotros', Component: About }\r\n];\r\n\r\nexport const NavRouter = () => {\r\n    return (\r\n        <BrowserRouter>\r\n            <nav className=\"nav-router\">\r\n                <ul>\r\n                    {routes.map((route) => (\r\n                        <li key={route.path}>\r\n                            <NavLink\r\n                                key={route.path}\r\n                                exact\r\n                                to={route.path}\r\n                                className=\"nav-item\"\r\n                                activeClassName=\"is-active\">\r\n                                {route.name}\r\n                            </NavLink>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </nav>\r\n            {routes.map(({ path, Component }) => (\r\n                <Route key={path} exact path={path} component={Component} />\r\n            ))}\r\n        </BrowserRouter>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport './style.css';\r\nimport { InfoBox } from '../../components/info-box';\r\nimport { DownloadPDFButton } from '../../components/download-pdf-button';\r\n\r\nexport const Home = () => {\r\n    return (\r\n        <div className=\"home-section\">\r\n            <InfoBox />\r\n            <DownloadPDFButton\r\n                pathToFile={process.env.PUBLIC_URL + '/doc/Memoria e-motion GMV.pdf'}\r\n            />\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\nimport Card from '../../components/cards/card';\r\nimport './style.css';\r\n\r\nexport const About = () => {\r\n    return (\r\n        <div className=\"body\">\r\n            <div className=\"flex\">\r\n                <Card\r\n                    imgSrc={process.env.PUBLIC_URL + '/images/background/default.jpg'}\r\n                    avatarSrc={process.env.PUBLIC_URL + '/images/avatar/antonio_avatar.png'}\r\n                    targetId=\"antonio\"\r\n                />\r\n\r\n                <Card\r\n                    type=\"arturo\"\r\n                    imgSrc={process.env.PUBLIC_URL + '/images/background/default.jpg'}\r\n                    avatarSrc={process.env.PUBLIC_URL + '/images/avatar/arturo_avatar.png'}\r\n                />\r\n\r\n                <Card\r\n                    type=\"inma\"\r\n                    imgSrc={process.env.PUBLIC_URL + '/images/background/default.jpg'}\r\n                    avatarSrc={process.env.PUBLIC_URL + '/images/avatar/inma_avatar.png'}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport { NavRouter } from './navrouter';\r\n\r\nclass App extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"area\">\r\n                <ul className=\"boxes\">\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <li className=\"backgroundBox\"></li>\r\n                    <NavRouter />\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}